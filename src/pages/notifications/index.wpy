<style lang="less">
.reply-delete {
  width: 20px;
  height: 20px;
}
</style>

<template>
    <view class="page">
    <view class="page__bd">
      <view class="weui-panel weui-panel_access">
        <view class="weui-panel__bd">
          <repeat for="{{ notifications }}" wx:key="id" index="index" item="notification">
            <view class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
              <navigator class="weui-media-box__hd weui-media-box__hd_in-appmsg" url="/pages/users/show?id={{ notification.data.user_id }}">
                <image class="notificationer-avatar weui-media-box__thumb" src="{{ notification.data.user_avatar }}" />
              </navigator>
              <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">

                <navigator class="weui-media-box__title" url="/pages/topics/show?id={{ notification.data.topic_id }}">
                  <view style="display: inline-block; vertical-align: middle">{{ notification.data.user_name }}</view>
                  评论了
                  <view style="display: inline-block; vertical-align: middle">{{ notification.data.topic_title }}</view>
                </navigator>

                <view class="weui-media-box__desc"><rich-text nodes="{{ notification.data.reply_content }}" bindtap="tap"></rich-text></view>
                <view class="weui-media-box__info">
                  <view class="weui-media-box__info__meta">{{ notification.created_at_diff }}</view>
                </view>
              </view>
               <image wx:if="{{ reply.can_delete }}" class="reply-delete" src="/images/trash.png" @tap="deleteReply({{ reply.topic_id }}, {{ reply.id }})"/>
            </view>
          </repeat>
          <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
            <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import util from '@/utils/util'
import api from '@/utils/api'

export default class notificationIndex extends wepy.page {
  config = {
    navigationBarTitleText: '通知列表',
    enablePullDownRefresh: true
  }
  data = {
        // 消息数据
    notifications: [],
        // 是否有更多数据
    noMoreData: false,
        // 是否正在加载
    isLoading: false,
        // 当前页面
    page: 1
  }
    // 获取消息
  async getNotifications(reset = false) {
    try {
      let notificationResponse = await api.authRequest({
        url: 'user/notifications',
        data: {
          page: this.page
        }
      })

            // 请求成功
      if (notificationResponse.statusCode === 200) {
        let notifications = notificationResponse.data.data
                // 格式化时间
        notifications.forEach(function(notification) {
          notification.created_at_diff = util.difForHumans(notification.created_at)
        })
                // 覆盖数据还是合并
        this.notifications = reset ? notifications : this.notifications.concat(notifications)
        let pagination = notificationResponse.data.meta.paginate
                // 判断是否有更多数据
        if (pagination.current_page === pagination.total_pages) {
          this.noMoreData = false
        }
        this.$apply()
      }
      return notificationResponse
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '提示',
        content: '服务器错误 请联系管理员'
      })
    }
  }
  async onLoad() {
    this.getNotifications()
    this.markAsRead()
  }
    // 下拉刷新
  async onPullDownRefresh() {
    this.noMoreData = false
    this.page = 1
    await this.getNotifications(true)
        // 设置消息已读
    this.markAsRead()
    wepy.stopPullDownRefresh()
  }
    // 加载更多
  async onReachBottom() {
        // 如果没有更多的数据 或者正在加载中直接返回
    if (this.noMoreData || this.isLoading) {
      return
    }
                // 设置为加载中
    this.isLoading = true
    this.page = this.pgae + 1
    await this.getNotifications()
    this.isLoading = false
    this.$apply()
  }
  async markAsRead() {
    try {
            // 标记消息已读  不显示loading
      let markResponse = await api.authRequest({
        url: 'user/read/notifications',
        method: 'put'
      })

      if (markResponse.statusCode === 204) {
                // 设置全局未读消息为0
        this.$parent.globalData.unreadCount = 0
        this.$apply()
      }
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '提示',
        content: '服务器错误 请联系管理员'
      })
    }
  }
}
</script>
